import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, confusion_matrix

# Load Data from CSV
file_path = "diabetes.csv"
data = pd.read_csv(file_path)
print("The first 5 Values of data are:\n", data.head())

# Obtain train data and train output
X = data.iloc[:, :-1]
print("\nThe First 5 values of the train data are\n", X.head())

y = data.iloc[:, -1]
print("\nThe First 5 values of train output are\n", y.head())

# Convert categorical features to numbers using LabelEncoder
label_encoder = LabelEncoder()
for column in X.columns:
    X[column] = label_encoder.fit_transform(X[column])

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)

# Initialize and train the Gaussian Naive Bayes classifier
classifier = GaussianNB()
classifier.fit(X_train, y_train)

# Predict
y_pred = classifier.predict(X_test)

# Print predicted values
print("Predicted Values:")
print(y_pred)

# Evaluate accuracy
accuracy = accuracy_score(y_pred, y_test)
print("Accuracy is:", accuracy)

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:")
print(cm)

